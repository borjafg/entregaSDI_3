//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace sdi3_23.Cli_SOAPcsharp.ServiceSoap {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdminServiceImplServiceSoapBinding", Namespace="http://impl.business.sdi.uo/")]
    public partial class AdminServiceImplService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback restartDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback deepDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback findAllUsersInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback disableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback findAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback enableUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback findUserByIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdminServiceImplService() {
            this.Url = global::sdi3_23.Cli_SOAPcsharp.Properties.Settings.Default.sdi3_23_Cli_SOAPcsharp_ServiceSoap_AdminServiceImplService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event restartDatabaseCompletedEventHandler restartDatabaseCompleted;
        
        /// <remarks/>
        public event deepDeleteUserCompletedEventHandler deepDeleteUserCompleted;
        
        /// <remarks/>
        public event findAllUsersInfoCompletedEventHandler findAllUsersInfoCompleted;
        
        /// <remarks/>
        public event disableUserCompletedEventHandler disableUserCompleted;
        
        /// <remarks/>
        public event findAllUsersCompletedEventHandler findAllUsersCompleted;
        
        /// <remarks/>
        public event enableUserCompletedEventHandler enableUserCompleted;
        
        /// <remarks/>
        public event findUserByIdCompletedEventHandler findUserByIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void restartDatabase() {
            this.Invoke("restartDatabase", new object[0]);
        }
        
        /// <remarks/>
        public void restartDatabaseAsync() {
            this.restartDatabaseAsync(null);
        }
        
        /// <remarks/>
        public void restartDatabaseAsync(object userState) {
            if ((this.restartDatabaseOperationCompleted == null)) {
                this.restartDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestartDatabaseOperationCompleted);
            }
            this.InvokeAsync("restartDatabase", new object[0], this.restartDatabaseOperationCompleted, userState);
        }
        
        private void OnrestartDatabaseOperationCompleted(object arg) {
            if ((this.restartDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restartDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deepDeleteUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            this.Invoke("deepDeleteUser", new object[] {
                        arg0,
                        arg0Specified});
        }
        
        /// <remarks/>
        public void deepDeleteUserAsync(long arg0, bool arg0Specified) {
            this.deepDeleteUserAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void deepDeleteUserAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.deepDeleteUserOperationCompleted == null)) {
                this.deepDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeepDeleteUserOperationCompleted);
            }
            this.InvokeAsync("deepDeleteUser", new object[] {
                        arg0,
                        arg0Specified}, this.deepDeleteUserOperationCompleted, userState);
        }
        
        private void OndeepDeleteUserOperationCompleted(object arg) {
            if ((this.deepDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deepDeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userInfoDTO[] findAllUsersInfo() {
            object[] results = this.Invoke("findAllUsersInfo", new object[0]);
            return ((userInfoDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void findAllUsersInfoAsync() {
            this.findAllUsersInfoAsync(null);
        }
        
        /// <remarks/>
        public void findAllUsersInfoAsync(object userState) {
            if ((this.findAllUsersInfoOperationCompleted == null)) {
                this.findAllUsersInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllUsersInfoOperationCompleted);
            }
            this.InvokeAsync("findAllUsersInfo", new object[0], this.findAllUsersInfoOperationCompleted, userState);
        }
        
        private void OnfindAllUsersInfoOperationCompleted(object arg) {
            if ((this.findAllUsersInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllUsersInfoCompleted(this, new findAllUsersInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void disableUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            this.Invoke("disableUser", new object[] {
                        arg0,
                        arg0Specified});
        }
        
        /// <remarks/>
        public void disableUserAsync(long arg0, bool arg0Specified) {
            this.disableUserAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void disableUserAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.disableUserOperationCompleted == null)) {
                this.disableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisableUserOperationCompleted);
            }
            this.InvokeAsync("disableUser", new object[] {
                        arg0,
                        arg0Specified}, this.disableUserOperationCompleted, userState);
        }
        
        private void OndisableUserOperationCompleted(object arg) {
            if ((this.disableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disableUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDTO[] findAllUsers() {
            object[] results = this.Invoke("findAllUsers", new object[0]);
            return ((userDTO[])(results[0]));
        }
        
        /// <remarks/>
        public void findAllUsersAsync() {
            this.findAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void findAllUsersAsync(object userState) {
            if ((this.findAllUsersOperationCompleted == null)) {
                this.findAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAllUsersOperationCompleted);
            }
            this.InvokeAsync("findAllUsers", new object[0], this.findAllUsersOperationCompleted, userState);
        }
        
        private void OnfindAllUsersOperationCompleted(object arg) {
            if ((this.findAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAllUsersCompleted(this, new findAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void enableUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            this.Invoke("enableUser", new object[] {
                        arg0,
                        arg0Specified});
        }
        
        /// <remarks/>
        public void enableUserAsync(long arg0, bool arg0Specified) {
            this.enableUserAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void enableUserAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.enableUserOperationCompleted == null)) {
                this.enableUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenableUserOperationCompleted);
            }
            this.InvokeAsync("enableUser", new object[] {
                        arg0,
                        arg0Specified}, this.enableUserOperationCompleted, userState);
        }
        
        private void OnenableUserOperationCompleted(object arg) {
            if ((this.enableUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enableUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.uo/", ResponseNamespace="http://impl.business.sdi.uo/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDTO findUserById([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            object[] results = this.Invoke("findUserById", new object[] {
                        arg0,
                        arg0Specified});
            return ((userDTO)(results[0]));
        }
        
        /// <remarks/>
        public void findUserByIdAsync(long arg0, bool arg0Specified) {
            this.findUserByIdAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void findUserByIdAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.findUserByIdOperationCompleted == null)) {
                this.findUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindUserByIdOperationCompleted);
            }
            this.InvokeAsync("findUserById", new object[] {
                        arg0,
                        arg0Specified}, this.findUserByIdOperationCompleted, userState);
        }
        
        private void OnfindUserByIdOperationCompleted(object arg) {
            if ((this.findUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findUserByIdCompleted(this, new findUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://impl.business.sdi.uo/")]
    public partial class userInfoDTO : userDTO {
        
        private long num_finished_delayed_tasksField;
        
        private long num_finished_tasksField;
        
        private long num_not_planned_tasksField;
        
        private long num_planned_tasksField;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long num_finished_delayed_tasks {
            get {
                return this.num_finished_delayed_tasksField;
            }
            set {
                this.num_finished_delayed_tasksField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long num_finished_tasks {
            get {
                return this.num_finished_tasksField;
            }
            set {
                this.num_finished_tasksField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long num_not_planned_tasks {
            get {
                return this.num_not_planned_tasksField;
            }
            set {
                this.num_not_planned_tasksField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long num_planned_tasks {
            get {
                return this.num_planned_tasksField;
            }
            set {
                this.num_planned_tasksField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userInfoDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://impl.business.sdi.uo/")]
    public partial class userDTO {
        
        private string emailField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private bool is_adminField;
        
        private string loginField;
        
        private string passwordField;
        
        private userStatusDTO statusField;
        
        private bool statusFieldSpecified;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool is_admin {
            get {
                return this.is_adminField;
            }
            set {
                this.is_adminField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userStatusDTO status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://impl.business.sdi.uo/")]
    public enum userStatusDTO {
        
        /// <comentarios/>
        ENABLED,
        
        /// <comentarios/>
        DISABLED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void restartDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void deepDeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void findAllUsersInfoCompletedEventHandler(object sender, findAllUsersInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllUsersInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findAllUsersInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userInfoDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userInfoDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void disableUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void findAllUsersCompletedEventHandler(object sender, findAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDTO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDTO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void enableUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void findUserByIdCompletedEventHandler(object sender, findUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDTO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591